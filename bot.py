import sys
import socket
import string
import time

HOST="irc.freenode.net"
PORT=6667
NICK="GooBo"
#NICK_NAME_LIST=["GooBo", "GuaiWa", "GuoGuo", "GuoPing"]
IDENT="UserName"
CHANNEL = "jamie-test"
REALNAME="getRealName "
readbuffer=""

s=socket.socket( )
s.connect((HOST, PORT))
s.send("NICK %s\r\n" % NICK)
s.send("USER %s %s bla :%s\r\n" % (IDENT, HOST, REALNAME))

GREETING_MESSAGE = "Hey, my name is GooBo, powered by eytoss, igonor me will be your best choice but if you don't, you will be surprised."

def _get_typed_message(message):
    """
        This is used to return only the user typed part of the message, i.e. discarding the part that generated by IRC automatically.
        # an example 
         message = ":jjaammiiee!~jjaammiie@c-76-124-176-27.hsd1.nj.comcast.net PRIVMSG #jamie-test :goobo help!"
         print _get_typed_message(message)
         >>goobo help!
    """
    return " ".join(message.split()[3:])[1:]
    
def _parse_command(message):
    """
        This is used to return only the user typed part of the message, i.e. discarding the part that generated by IRC automatically.
        # an example 
         message = ":jjaammiiee!~jjaammiie@c-76-124-176-27.hsd1.nj.comcast.net PRIVMSG #jamie-test :goobo help!"
         print _get_typed_message(message)
         >>goobo help!
    """
    return message.split()
    

def generate_GH_url(issue_id):
    """"""
    message = "https://github.com/DramaFever/www/issues/{}".format(issue_id)
    s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, message))

def send_message(message):
    """
        This is the basic function of sending a one line message to IRC
    """
    s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, message))
    
def repeat_message(message=None, repeat_time=3, interval=0, start_immediately=True):
    """"""
    if not message:
        s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, "You did not specify what to repeat, so I will just repeat my favorite quote:"))
        message = "Who dares wins"
    for i in range(0, repeat_time):
        s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, message))

# service list. Before DB is introduced here.
SERVICE_TUPLE_LIST = (
                      ("lunchdoc", send_message, "Narberth Lunch Doc: http://goo.gl/vs8RB"),
                      ("google", send_message, "http://www.google.com"),
                      ("repeat", repeat_message, ""),
                      ("GH", generate_GH_url, ""),
                     )

s.send ( 'JOIN #%s\r\n' % CHANNEL) # YOU MUST CHANGE THE CHANNEL HERE AND BELOW!!
s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, GREETING_MESSAGE))

repeat_message(GREETING_MESSAGE)

while True:
    readbuffer=readbuffer+s.recv(1024)
    temp=string.split(readbuffer, "\n")
    readbuffer=temp.pop( )
    
    for line in temp:
        print line
        message = _get_typed_message(line)
        if message == "PING":
            s.send("PONG %s\r\n" % line[1])
        elif message == "goobo":
            s.send ( 'PRIVMSG #%s :%s\r\n' % (CHANNEL, "YES Sir! Check out my service list: goobo help"))
        elif message.startswith("goobo"):
            for service in SERVICE_TUPLE_LIST:
                command, function, parameter = service
                if message.split()[1] == command:
                    function(parameter if parameter else message.split()[2])
